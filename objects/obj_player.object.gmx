<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ICollide</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// setup player
_playerSlot = 1;
_hp = 100;
_speedVector = 150 / room_speed;
depth = 1;
direction = point_direction(x, y, room_width / 2, room_height / 2);

/* Setup weapon */
_weaponDirection = direction;
_weapons = ds_list_create();
_maxWeapons = 2;
_weaponsCount = 0;
_activeWeapon = 0;

scr_playerPickupWeapon(instance_create(x, y, obj_smg));
scr_playerPickupWeapon(instance_create(x, y, obj_sniperRifle));



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_hp &lt;= 0) {
    scr_destroyPlayer();   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var d = inputdog_direction("up","down","left","right",_playerSlot);
direction = d;
if (d == -1) { _hspd = 0; _vspd = 0; }
else {   
  var s = point_distance(0,0, -inputdog_analog("left",_playerSlot)+inputdog_analog("right",_playerSlot),
                                -inputdog_analog("up",_playerSlot)+inputdog_analog("down",_playerSlot));
   s *= _speedVector;
   _hspd = lengthdir_x(s, d);
   _vspd = lengthdir_y(s, d); 
}

/* Weapon Switch */
if (inputdog_pressed("switch", _playerSlot)) {
    _activeWeapon = (_activeWeapon + 1) % _weaponsCount;
}

/* Move */
scr_playerCollideAndMove();

/* Weapon Direction */
var rd = inputdog_direction("rup","rdown","rleft","rright",_playerSlot);
var rstrength = inputdog_true_analog(false, _playerSlot);
if (rstrength != 0 &amp;&amp; rd != -1) {
   var dif = angle_difference(rd, _weaponDirection);
   _weaponDirection += median(-10, dif, 10);
   //_weaponDirection += rd;
}
for (var i = 0; i &lt; _weaponsCount; i++) {
    _weapons[| i].x = x;
    _weapons[| i].y = y;
    _weapons[| i].image_angle = _weaponDirection;
}

/* Shoot */
scr_playerWeaponControls();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var right, bottom;
right = (_playerSlot % 2 == 0);
bottom = _playerSlot &gt; 2;

var xStart = 64;
var yStart = 64;
var margin = 24;
if (right) xStart = room_width - xStart;
if (bottom) yStart = room_height - yStart;

if (right) {
    draw_set_halign(fa_right);
}
else {
    draw_set_halign(fa_left);
}
if (bottom) {
    draw_set_valign(fa_bottom);
}
else {
    draw_set_valign(fa_top);
}
draw_set_color(c_white);
draw_text(xStart, yStart, "Player: " + string(_playerSlot));
draw_text(xStart, yStart + margin, "Bullets: " + string(_weapons[| _activeWeapon]._bullets));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
